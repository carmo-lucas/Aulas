[
["index.html", "Aulas de R Introdução", " Aulas de R Lucas Chagas Lima do Carmo 2020-03-11 Introdução Para a primeira aula teremos que instalar R através do site https://cran.r-project.org/ e o programa RStudio que é um ambiente de desenvolvimento integrado (IDA) que facilita a o uso do R, ele pode ser baixado para o sistema operacional que você estiver usando neste link https://rstudio.com/products/rstudio/download/ Você deve instalar o R antes do RStudio. "],
["tipos-de-dados.html", "Aula 1 Tipos de Dados", " Aula 1 Tipos de Dados Para esta aula iremos apenas usar o console. Na configuração padrão do RStudio o console é o painel esquerdo-inferior. O console é onde você vai mandar os comandos para o R executar linha a linha. Para comandos mais complicados com várias linhas é mais interessante escrever um script. Para criar um script use o atalho Ctrl + Shift + N no Windows ou Cmd + Shift + N no MacOs. Primeiro iremos discutir o que são objetos e que tipos de objetos podemos criar ou importar para dentro do R. No R e em outras linguagens de programação existe o conceito de objeto. Um objeto pode ser um vetor ou uma matriz de valores numéricos. Pode ser uma tabela com várias linhas e colunas, pode ser uma fórmula também. O termo objeto é um termo genérico com as aplicações citadas e muitas outras. Para criar um objeto, usamos o operador &lt;-, por exemplo: objeto &lt;- 1000 Este objeto contém o valor 1000 então se você decidir imprimir (print()) este objeto o valor que aparecerá para voce é de 1000. Os objetos podem conter outros tipos de valores também, por exemplo frases: frase &lt;- &quot;The first soft snow: leaves of the awed jonquil bow low&quot; Se você tentar usar print(frase) o resultado vai ser o texto que foi atribuído a este objeto. Outro tipo de objeto são vetores (em outras linguagens de programação são chamados arrays), Vetores são objetos que contém vários valores numéricos ou de texto. vetor &lt;- c(0, 4, 3, 5, 6, 4, 2) print(vetor) ## [1] 0 4 3 5 6 4 2 Até agora foram usadas duas funções: print() e c(). Para você descobrir o que estas funções fazem você pode digitar ?print() ou ?c() no console e ver a definição e os argumentos que elas precisam. Iremos discutir funções mais pra frente mas é bom entender desde o início como achar as informações relevantes para que não se perca tempo. Boa parte de aprender R é pesquisar e ler a documentação das funções que existem no R nativo e nas outras extensões (libraries ou packages) do R que se pode baixar. Em R existem vários tipos de classes de dados mas nesta aula iremos apenas aprender 4 deles: Caracteres (strings): Podem ser letras individuais ou frases longas, são usados como variáveis categóricas para diferenciar os grupos nos seus dados ou para criar anotações em gráficos. Números (integers, numeric, complex): Existem diversas classes de números, podem ser inteiros, decimais ou complexos. Fatores categóricos (factors): Fatores podem ser comparados a strings quando aplicados à distinção entre variáveis categóricas porém uma vantagem é que eles são ordenados e podem possuir níveis, o que strings não possuem. Lógicos (TRUE, FALSE): Valores lógicos servem para avaliar se alguma expressão é verdadeira ou falsa. Um exemplo simples é verificar de 4 é igual a 5. 4 == 5 ## [1] FALSE 1000 &lt;= -23 ## [1] FALSE &quot;abc&quot; == &quot;bca&quot; ## [1] FALSE is.numeric(&quot;c&quot;) ## [1] FALSE Como imaginado, se tentamos avaliar as expressões acima, o resultado é FALSE, agora se tentamos outra expressão que seja verdadeira como as abaixo temos um retorno TRUE 2*10 == 20 ## [1] TRUE 30 &gt; 12 ## [1] TRUE &quot;string&quot; == &quot;string&quot; ## [1] TRUE is.numeric(99) ## [1] TRUE A função ìs.numeric() usada é entendida como a pergunta: “Esse objeto que eu estou te mostrando é numérico?”, se sim, a função retorna TRUE e se não, o retorno é FALSE. Para finalizar a primeira aula faremos alguns exercícios Pesquisem para que servem as funções rep() e seq(); Usem essas funções para criar 3 vetores de qualquer tipo: numérico, string, lógico, etc.; Pesquisem como criar uma matriz e criem uma matriz com o alfabeto como mostrado abaixo. ## [,1] [,2] [,3] [,4] ## [1,] &quot;A&quot; &quot;B&quot; &quot;C&quot; &quot;D&quot; ## [2,] &quot;E&quot; &quot;F&quot; &quot;G&quot; &quot;H&quot; ## [3,] &quot;I&quot; &quot;J&quot; &quot;K&quot; &quot;L&quot; ## [4,] &quot;M&quot; &quot;N&quot; &quot;O&quot; &quot;P&quot; ## [5,] &quot;Q&quot; &quot;R&quot; &quot;S&quot; &quot;T&quot; ## [6,] &quot;U&quot; &quot;V&quot; &quot;W&quot; &quot;X&quot; ## [7,] &quot;Y&quot; &quot;Z&quot; &quot;a&quot; &quot;b&quot; ## [8,] &quot;c&quot; &quot;d&quot; &quot;e&quot; &quot;f&quot; ## [9,] &quot;g&quot; &quot;h&quot; &quot;i&quot; &quot;j&quot; ## [10,] &quot;k&quot; &quot;l&quot; &quot;m&quot; &quot;n&quot; ## [11,] &quot;o&quot; &quot;p&quot; &quot;q&quot; &quot;r&quot; ## [12,] &quot;s&quot; &quot;t&quot; &quot;u&quot; &quot;v&quot; ## [13,] &quot;w&quot; &quot;x&quot; &quot;y&quot; &quot;z&quot; "]
]
